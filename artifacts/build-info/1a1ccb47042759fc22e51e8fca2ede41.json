{
	"id": "1a1ccb47042759fc22e51e8fca2ede41",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"bstr.sol": {
				"content": "pragma solidity 0.8.18;\n\ncontract Test {\n   address public richest;\n   uint public mostSent;\n\n   mapping (address => uint) pendingWithdrawals;\n\n   constructor() public payable {\n      richest = msg.sender;\n      mostSent = msg.value;\n   }\n   function becomeRichest() public payable returns (bool) {\n      if (msg.value > mostSent) {\n         pendingWithdrawals[richest] += msg.value;\n         richest = msg.sender;\n         mostSent = msg.value;\n         return true;\n      } else {\n         return false;\n      }\n   }\n   function withdraw() public {\n      uint amount = pendingWithdrawals[msg.sender];\n      pendingWithdrawals[msg.sender] = 0;\n      payable(msg.sender).transfer(amount);\n   }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"bstr.sol": {
				"Test": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "becomeRichest",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mostSent",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "richest",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"bstr.sol\":25:695  contract Test {... */\n  mstore(0x40, 0x80)\n    /* \"bstr.sol\":194:204  msg.sender */\n  caller\n    /* \"bstr.sol\":184:191  richest */\n  0x00\n  dup1\n    /* \"bstr.sol\":184:204  richest = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"bstr.sol\":223:232  msg.value */\n  callvalue\n    /* \"bstr.sol\":212:220  mostSent */\n  0x01\n    /* \"bstr.sol\":212:232  mostSent = msg.value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"bstr.sol\":25:695  contract Test {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"bstr.sol\":25:695  contract Test {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x02e26c38\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x6886bf1c\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x69934ee7\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"bstr.sol\":44:66  address public richest */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_6\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_6:\n      pop\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"bstr.sol\":522:693  function withdraw() public {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      pop\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      stop\n        /* \"bstr.sol\":71:91  uint public mostSent */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      pop\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"bstr.sol\":242:518  function becomeRichest() public payable returns (bool) {... */\n    tag_5:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"bstr.sol\":44:66  address public richest */\n    tag_8:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"bstr.sol\":522:693  function withdraw() public {... */\n    tag_13:\n        /* \"bstr.sol\":557:568  uint amount */\n      0x00\n        /* \"bstr.sol\":571:589  pendingWithdrawals */\n      0x02\n        /* \"bstr.sol\":571:601  pendingWithdrawals[msg.sender] */\n      0x00\n        /* \"bstr.sol\":590:600  msg.sender */\n      caller\n        /* \"bstr.sol\":571:601  pendingWithdrawals[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"bstr.sol\":557:601  uint amount = pendingWithdrawals[msg.sender] */\n      swap1\n      pop\n        /* \"bstr.sol\":642:643  0 */\n      0x00\n        /* \"bstr.sol\":609:627  pendingWithdrawals */\n      0x02\n        /* \"bstr.sol\":609:639  pendingWithdrawals[msg.sender] */\n      0x00\n        /* \"bstr.sol\":628:638  msg.sender */\n      caller\n        /* \"bstr.sol\":609:639  pendingWithdrawals[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"bstr.sol\":609:643  pendingWithdrawals[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"bstr.sol\":659:669  msg.sender */\n      caller\n        /* \"bstr.sol\":651:679  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"bstr.sol\":651:687  payable(msg.sender).transfer(amount) */\n      0x08fc\n        /* \"bstr.sol\":680:686  amount */\n      dup3\n        /* \"bstr.sol\":651:687  payable(msg.sender).transfer(amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_25\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_25:\n      pop\n        /* \"bstr.sol\":549:693  {... */\n      pop\n        /* \"bstr.sol\":522:693  function withdraw() public {... */\n      jump\t// out\n        /* \"bstr.sol\":71:91  uint public mostSent */\n    tag_16:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"bstr.sol\":242:518  function becomeRichest() public payable returns (bool) {... */\n    tag_20:\n        /* \"bstr.sol\":291:295  bool */\n      0x00\n        /* \"bstr.sol\":321:329  mostSent */\n      sload(0x01)\n        /* \"bstr.sol\":309:318  msg.value */\n      callvalue\n        /* \"bstr.sol\":309:329  msg.value > mostSent */\n      gt\n        /* \"bstr.sol\":305:513  if (msg.value > mostSent) {... */\n      iszero\n      tag_27\n      jumpi\n        /* \"bstr.sol\":373:382  msg.value */\n      callvalue\n        /* \"bstr.sol\":342:360  pendingWithdrawals */\n      0x02\n        /* \"bstr.sol\":342:369  pendingWithdrawals[richest] */\n      0x00\n        /* \"bstr.sol\":361:368  richest */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"bstr.sol\":342:369  pendingWithdrawals[richest] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"bstr.sol\":342:382  pendingWithdrawals[richest] += msg.value */\n      dup3\n      dup3\n      sload\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"bstr.sol\":403:413  msg.sender */\n      caller\n        /* \"bstr.sol\":393:400  richest */\n      0x00\n      dup1\n        /* \"bstr.sol\":393:413  richest = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"bstr.sol\":435:444  msg.value */\n      callvalue\n        /* \"bstr.sol\":424:432  mostSent */\n      0x01\n        /* \"bstr.sol\":424:444  mostSent = msg.value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"bstr.sol\":462:466  true */\n      0x01\n        /* \"bstr.sol\":455:466  return true */\n      swap1\n      pop\n      jump(tag_26)\n        /* \"bstr.sol\":305:513  if (msg.value > mostSent) {... */\n    tag_27:\n        /* \"bstr.sol\":499:504  false */\n      0x00\n        /* \"bstr.sol\":492:504  return false */\n      swap1\n      pop\n        /* \"bstr.sol\":242:518  function becomeRichest() public payable returns (bool) {... */\n    tag_26:\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_31:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_32:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_42\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_31\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_33:\n        /* \"#utility.yul\":328:352   */\n      tag_44\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_32\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_10:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_46\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_33\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":593:670   */\n    tag_34:\n        /* \"#utility.yul\":630:637   */\n      0x00\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":648:664   */\n      swap1\n      pop\n        /* \"#utility.yul\":593:670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":676:794   */\n    tag_35:\n        /* \"#utility.yul\":763:787   */\n      tag_49\n        /* \"#utility.yul\":781:786   */\n      dup2\n        /* \"#utility.yul\":763:787   */\n      tag_34\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":758:761   */\n      dup3\n        /* \"#utility.yul\":751:788   */\n      mstore\n        /* \"#utility.yul\":676:794   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":800:1022   */\n    tag_18:\n        /* \"#utility.yul\":893:897   */\n      0x00\n        /* \"#utility.yul\":931:933   */\n      0x20\n        /* \"#utility.yul\":920:929   */\n      dup3\n        /* \"#utility.yul\":916:934   */\n      add\n        /* \"#utility.yul\":908:934   */\n      swap1\n      pop\n        /* \"#utility.yul\":944:1015   */\n      tag_51\n        /* \"#utility.yul\":1012:1013   */\n      0x00\n        /* \"#utility.yul\":1001:1010   */\n      dup4\n        /* \"#utility.yul\":997:1014   */\n      add\n        /* \"#utility.yul\":988:994   */\n      dup5\n        /* \"#utility.yul\":944:1015   */\n      tag_35\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":800:1022   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1028:1118   */\n    tag_36:\n        /* \"#utility.yul\":1062:1069   */\n      0x00\n        /* \"#utility.yul\":1105:1110   */\n      dup2\n        /* \"#utility.yul\":1098:1111   */\n      iszero\n        /* \"#utility.yul\":1091:1112   */\n      iszero\n        /* \"#utility.yul\":1080:1112   */\n      swap1\n      pop\n        /* \"#utility.yul\":1028:1118   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1124:1233   */\n    tag_37:\n        /* \"#utility.yul\":1205:1226   */\n      tag_54\n        /* \"#utility.yul\":1220:1225   */\n      dup2\n        /* \"#utility.yul\":1205:1226   */\n      tag_36\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":1200:1203   */\n      dup3\n        /* \"#utility.yul\":1193:1227   */\n      mstore\n        /* \"#utility.yul\":1124:1233   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1239:1449   */\n    tag_22:\n        /* \"#utility.yul\":1326:1330   */\n      0x00\n        /* \"#utility.yul\":1364:1366   */\n      0x20\n        /* \"#utility.yul\":1353:1362   */\n      dup3\n        /* \"#utility.yul\":1349:1367   */\n      add\n        /* \"#utility.yul\":1341:1367   */\n      swap1\n      pop\n        /* \"#utility.yul\":1377:1442   */\n      tag_56\n        /* \"#utility.yul\":1439:1440   */\n      0x00\n        /* \"#utility.yul\":1428:1437   */\n      dup4\n        /* \"#utility.yul\":1424:1441   */\n      add\n        /* \"#utility.yul\":1415:1421   */\n      dup5\n        /* \"#utility.yul\":1377:1442   */\n      tag_37\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":1239:1449   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1455:1635   */\n    tag_38:\n        /* \"#utility.yul\":1503:1580   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1500:1501   */\n      0x00\n        /* \"#utility.yul\":1493:1581   */\n      mstore\n        /* \"#utility.yul\":1600:1604   */\n      0x11\n        /* \"#utility.yul\":1597:1598   */\n      0x04\n        /* \"#utility.yul\":1590:1605   */\n      mstore\n        /* \"#utility.yul\":1624:1628   */\n      0x24\n        /* \"#utility.yul\":1621:1622   */\n      0x00\n        /* \"#utility.yul\":1614:1629   */\n      revert\n        /* \"#utility.yul\":1641:1832   */\n    tag_29:\n        /* \"#utility.yul\":1681:1684   */\n      0x00\n        /* \"#utility.yul\":1700:1720   */\n      tag_59\n        /* \"#utility.yul\":1718:1719   */\n      dup3\n        /* \"#utility.yul\":1700:1720   */\n      tag_34\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":1695:1720   */\n      swap2\n      pop\n        /* \"#utility.yul\":1734:1754   */\n      tag_60\n        /* \"#utility.yul\":1752:1753   */\n      dup4\n        /* \"#utility.yul\":1734:1754   */\n      tag_34\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":1729:1754   */\n      swap3\n      pop\n        /* \"#utility.yul\":1777:1778   */\n      dup3\n        /* \"#utility.yul\":1774:1775   */\n      dup3\n        /* \"#utility.yul\":1770:1779   */\n      add\n        /* \"#utility.yul\":1763:1779   */\n      swap1\n      pop\n        /* \"#utility.yul\":1798:1801   */\n      dup1\n        /* \"#utility.yul\":1795:1796   */\n      dup3\n        /* \"#utility.yul\":1792:1802   */\n      gt\n        /* \"#utility.yul\":1789:1825   */\n      iszero\n      tag_61\n      jumpi\n        /* \"#utility.yul\":1805:1823   */\n      tag_62\n      tag_38\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":1789:1825   */\n    tag_61:\n        /* \"#utility.yul\":1641:1832   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208247cac17dc0b4c41e4451620a0795002fa402ed414ae459b8a95d18a3eba89b64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346001819055506104068061005a6000396000f3fe60806040526004361061003f5760003560e01c806302e26c38146100445780633ccfd60b1461006f5780636886bf1c1461008657806369934ee7146100b1575b600080fd5b34801561005057600080fd5b506100596100cf565b60405161006691906102e8565b60405180910390f35b34801561007b57600080fd5b506100846100f3565b005b34801561009257600080fd5b5061009b6101c6565b6040516100a8919061031c565b60405180910390f35b6100b96101cc565b6040516100c69190610352565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156101c2573d6000803e3d6000fd5b5050565b60015481565b600060015434111561029f5734600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610248919061039c565b92505081905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600181905550600190506102a4565b600090505b90565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102d2826102a7565b9050919050565b6102e2816102c7565b82525050565b60006020820190506102fd60008301846102d9565b92915050565b6000819050919050565b61031681610303565b82525050565b6000602082019050610331600083018461030d565b92915050565b60008115159050919050565b61034c81610337565b82525050565b60006020820190506103676000830184610343565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006103a782610303565b91506103b283610303565b92508282019050808211156103ca576103c961036d565b5b9291505056fea26469706673582212208247cac17dc0b4c41e4451620a0795002fa402ed414ae459b8a95d18a3eba89b64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0x406 DUP1 PUSH2 0x5A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2E26C38 EQ PUSH2 0x44 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x6F JUMPI DUP1 PUSH4 0x6886BF1C EQ PUSH2 0x86 JUMPI DUP1 PUSH4 0x69934EE7 EQ PUSH2 0xB1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59 PUSH2 0xCF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x2E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x84 PUSH2 0xF3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9B PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA8 SWAP2 SWAP1 PUSH2 0x31C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 PUSH2 0x1CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC6 SWAP2 SWAP1 PUSH2 0x352 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1C2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD CALLVALUE GT ISZERO PUSH2 0x29F JUMPI CALLVALUE PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x248 SWAP2 SWAP1 PUSH2 0x39C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x2A4 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D2 DUP3 PUSH2 0x2A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E2 DUP2 PUSH2 0x2C7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2FD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x316 DUP2 PUSH2 0x303 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x331 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x30D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x34C DUP2 PUSH2 0x337 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x367 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x343 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3A7 DUP3 PUSH2 0x303 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B2 DUP4 PUSH2 0x303 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3CA JUMPI PUSH2 0x3C9 PUSH2 0x36D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 SELFBALANCE 0xCA 0xC1 PUSH30 0xC0B4C41E4451620A0795002FA402ED414AE459B8A95D18A3EBA89B64736F PUSH13 0x63430008120033000000000000 ",
							"sourceMap": "25:670:0:-:0;;;194:10;184:7;;:20;;;;;;;;;;;;;;;;;;223:9;212:8;:20;;;;25:670;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@becomeRichest_57": {
									"entryPoint": 460,
									"id": 57,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mostSent_5": {
									"entryPoint": 454,
									"id": 5,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@richest_3": {
									"entryPoint": 207,
									"id": 3,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_84": {
									"entryPoint": 243,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 729,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 835,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 781,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 744,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 850,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 796,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 924,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 711,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 823,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 679,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 771,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 877,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1835:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "184:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "194:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "205:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "166:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "176:7:1",
														"type": ""
													}
												],
												"src": "139:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "306:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "316:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "316:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "294:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "301:3:1",
														"type": ""
													}
												],
												"src": "241:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "463:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "473:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "496:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "481:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "577:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "509:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "509:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "435:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "447:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "458:4:1",
														"type": ""
													}
												],
												"src": "365:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "638:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "648:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "659:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "648:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "620:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "630:7:1",
														"type": ""
													}
												],
												"src": "593:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "741:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "758:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "781:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "763:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "763:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "751:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "751:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "751:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "729:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "736:3:1",
														"type": ""
													}
												],
												"src": "676:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "898:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "908:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "920:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "931:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "916:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "916:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "908:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "988:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1001:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1012:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "997:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "997:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "944:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "944:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "944:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "870:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "882:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "893:4:1",
														"type": ""
													}
												],
												"src": "800:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1070:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1080:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1105:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1098:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1098:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1091:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1091:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1080:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1052:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1062:7:1",
														"type": ""
													}
												],
												"src": "1028:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1183:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1200:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1220:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1205:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1205:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1193:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1193:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1193:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1171:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1178:3:1",
														"type": ""
													}
												],
												"src": "1124:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1331:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1341:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1353:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1364:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1349:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1349:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1341:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1415:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1428:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1439:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1424:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1424:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1377:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1377:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1377:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1303:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1315:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1326:4:1",
														"type": ""
													}
												],
												"src": "1239:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1483:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1500:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1503:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1493:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1493:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1493:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1597:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1600:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1590:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1590:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1590:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1621:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1624:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1614:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1614:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1614:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1455:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1685:147:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1695:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1718:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1700:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1700:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1695:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1729:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1752:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1734:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1734:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1729:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1763:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1774:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1777:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1770:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1770:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "1763:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1803:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1805:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1805:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1805:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1795:1:1"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "1798:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1792:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1792:10:1"
															},
															"nodeType": "YulIf",
															"src": "1789:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1672:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1675:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "1681:3:1",
														"type": ""
													}
												],
												"src": "1641:191:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061003f5760003560e01c806302e26c38146100445780633ccfd60b1461006f5780636886bf1c1461008657806369934ee7146100b1575b600080fd5b34801561005057600080fd5b506100596100cf565b60405161006691906102e8565b60405180910390f35b34801561007b57600080fd5b506100846100f3565b005b34801561009257600080fd5b5061009b6101c6565b6040516100a8919061031c565b60405180910390f35b6100b96101cc565b6040516100c69190610352565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156101c2573d6000803e3d6000fd5b5050565b60015481565b600060015434111561029f5734600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610248919061039c565b92505081905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600181905550600190506102a4565b600090505b90565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102d2826102a7565b9050919050565b6102e2816102c7565b82525050565b60006020820190506102fd60008301846102d9565b92915050565b6000819050919050565b61031681610303565b82525050565b6000602082019050610331600083018461030d565b92915050565b60008115159050919050565b61034c81610337565b82525050565b60006020820190506103676000830184610343565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006103a782610303565b91506103b283610303565b92508282019050808211156103ca576103c961036d565b5b9291505056fea26469706673582212208247cac17dc0b4c41e4451620a0795002fa402ed414ae459b8a95d18a3eba89b64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2E26C38 EQ PUSH2 0x44 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x6F JUMPI DUP1 PUSH4 0x6886BF1C EQ PUSH2 0x86 JUMPI DUP1 PUSH4 0x69934EE7 EQ PUSH2 0xB1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59 PUSH2 0xCF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x2E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x84 PUSH2 0xF3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9B PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA8 SWAP2 SWAP1 PUSH2 0x31C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 PUSH2 0x1CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC6 SWAP2 SWAP1 PUSH2 0x352 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1C2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD CALLVALUE GT ISZERO PUSH2 0x29F JUMPI CALLVALUE PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x248 SWAP2 SWAP1 PUSH2 0x39C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x2A4 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D2 DUP3 PUSH2 0x2A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E2 DUP2 PUSH2 0x2C7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2FD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x316 DUP2 PUSH2 0x303 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x331 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x30D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x34C DUP2 PUSH2 0x337 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x367 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x343 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3A7 DUP3 PUSH2 0x303 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B2 DUP4 PUSH2 0x303 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3CA JUMPI PUSH2 0x3C9 PUSH2 0x36D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 SELFBALANCE 0xCA 0xC1 PUSH30 0xC0B4C41E4451620A0795002FA402ED414AE459B8A95D18A3EBA89B64736F PUSH13 0x63430008120033000000000000 ",
							"sourceMap": "25:670:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;44:22;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;522:171;;;;;;;;;;;;;:::i;:::-;;71:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;242:276;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;44:22;;;;;;;;;;;;:::o;522:171::-;557:11;571:18;:30;590:10;571:30;;;;;;;;;;;;;;;;557:44;;642:1;609:18;:30;628:10;609:30;;;;;;;;;;;;;;;:34;;;;659:10;651:28;;:36;680:6;651:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;549:144;522:171::o;71:20::-;;;;:::o;242:276::-;291:4;321:8;;309:9;:20;305:208;;;373:9;342:18;:27;361:7;;;;;;;;;;;342:27;;;;;;;;;;;;;;;;:40;;;;;;;:::i;:::-;;;;;;;;403:10;393:7;;:20;;;;;;;;;;;;;;;;;;435:9;424:8;:20;;;;462:4;455:11;;;;305:208;499:5;492:12;;242:276;;:::o;7:126:1:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:77::-;630:7;659:5;648:16;;593:77;;;:::o;676:118::-;763:24;781:5;763:24;:::i;:::-;758:3;751:37;676:118;;:::o;800:222::-;893:4;931:2;920:9;916:18;908:26;;944:71;1012:1;1001:9;997:17;988:6;944:71;:::i;:::-;800:222;;;;:::o;1028:90::-;1062:7;1105:5;1098:13;1091:21;1080:32;;1028:90;;;:::o;1124:109::-;1205:21;1220:5;1205:21;:::i;:::-;1200:3;1193:34;1124:109;;:::o;1239:210::-;1326:4;1364:2;1353:9;1349:18;1341:26;;1377:65;1439:1;1428:9;1424:17;1415:6;1377:65;:::i;:::-;1239:210;;;;:::o;1455:180::-;1503:77;1500:1;1493:88;1600:4;1597:1;1590:15;1624:4;1621:1;1614:15;1641:191;1681:3;1700:20;1718:1;1700:20;:::i;:::-;1695:25;;1734:20;1752:1;1734:20;:::i;:::-;1729:25;;1777:1;1774;1770:9;1763:16;;1798:3;1795:1;1792:10;1789:36;;;1805:18;;:::i;:::-;1789:36;1641:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "206000",
								"executionCost": "46606",
								"totalCost": "252606"
							},
							"external": {
								"becomeRichest()": "infinite",
								"mostSent()": "2451",
								"richest()": "2489",
								"withdraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 25,
									"end": 695,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 25,
									"end": 695,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25,
									"end": 695,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 194,
									"end": 204,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 184,
									"end": 191,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 184,
									"end": 191,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 204,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 184,
									"end": 204,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 184,
									"end": 204,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 184,
									"end": 204,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 184,
									"end": 204,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 184,
									"end": 204,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 184,
									"end": 204,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 184,
									"end": 204,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 184,
									"end": 204,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 184,
									"end": 204,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 204,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 184,
									"end": 204,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 184,
									"end": 204,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 184,
									"end": 204,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 184,
									"end": 204,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 184,
									"end": 204,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 204,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 184,
									"end": 204,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 223,
									"end": 232,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 212,
									"end": 220,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 212,
									"end": 232,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 212,
									"end": 232,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 212,
									"end": 232,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 212,
									"end": 232,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25,
									"end": 695,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 695,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25,
									"end": 695,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 695,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25,
									"end": 695,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 25,
									"end": 695,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25,
									"end": 695,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208247cac17dc0b4c41e4451620a0795002fa402ed414ae459b8a95d18a3eba89b64736f6c63430008120033",
									".code": [
										{
											"begin": 25,
											"end": 695,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 25,
											"end": 695,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25,
											"end": 695,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25,
											"end": 695,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25,
											"end": 695,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25,
											"end": 695,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 25,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25,
											"end": 695,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25,
											"end": 695,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25,
											"end": 695,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 25,
											"end": 695,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 25,
											"end": 695,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 25,
											"end": 695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25,
											"end": 695,
											"name": "PUSH",
											"source": 0,
											"value": "2E26C38"
										},
										{
											"begin": 25,
											"end": 695,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25,
											"end": 695,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25,
											"end": 695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25,
											"end": 695,
											"name": "PUSH",
											"source": 0,
											"value": "3CCFD60B"
										},
										{
											"begin": 25,
											"end": 695,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 25,
											"end": 695,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25,
											"end": 695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25,
											"end": 695,
											"name": "PUSH",
											"source": 0,
											"value": "6886BF1C"
										},
										{
											"begin": 25,
											"end": 695,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25,
											"end": 695,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25,
											"end": 695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25,
											"end": 695,
											"name": "PUSH",
											"source": 0,
											"value": "69934EE7"
										},
										{
											"begin": 25,
											"end": 695,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 25,
											"end": 695,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25,
											"end": 695,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25,
											"end": 695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25,
											"end": 695,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25,
											"end": 695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25,
											"end": 695,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 44,
											"end": 66,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 44,
											"end": 66,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44,
											"end": 66,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 44,
											"end": 66,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44,
											"end": 66,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44,
											"end": 66,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 44,
											"end": 66,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44,
											"end": 66,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44,
											"end": 66,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44,
											"end": 66,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 44,
											"end": 66,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 44,
											"end": 66,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44,
											"end": 66,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44,
											"end": 66,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 44,
											"end": 66,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 44,
											"end": 66,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44,
											"end": 66,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 44,
											"end": 66,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44,
											"end": 66,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44,
											"end": 66,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44,
											"end": 66,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 44,
											"end": 66,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44,
											"end": 66,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44,
											"end": 66,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 44,
											"end": 66,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44,
											"end": 66,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 44,
											"end": 66,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44,
											"end": 66,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44,
											"end": 66,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44,
											"end": 66,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44,
											"end": 66,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44,
											"end": 66,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 44,
											"end": 66,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44,
											"end": 66,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 522,
											"end": 693,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 522,
											"end": 693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 522,
											"end": 693,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 522,
											"end": 693,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 522,
											"end": 693,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 522,
											"end": 693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 522,
											"end": 693,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 522,
											"end": 693,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 522,
											"end": 693,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 522,
											"end": 693,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 522,
											"end": 693,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 522,
											"end": 693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 522,
											"end": 693,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 522,
											"end": 693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 522,
											"end": 693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 522,
											"end": 693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 522,
											"end": 693,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 522,
											"end": 693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 522,
											"end": 693,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 71,
											"end": 91,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 71,
											"end": 91,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71,
											"end": 91,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 71,
											"end": 91,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71,
											"end": 91,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 71,
											"end": 91,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 71,
											"end": 91,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 71,
											"end": 91,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 71,
											"end": 91,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71,
											"end": 91,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 71,
											"end": 91,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 71,
											"end": 91,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71,
											"end": 91,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 71,
											"end": 91,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 71,
											"end": 91,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 71,
											"end": 91,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 71,
											"end": 91,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 71,
											"end": 91,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71,
											"end": 91,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 91,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 71,
											"end": 91,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 71,
											"end": 91,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 71,
											"end": 91,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 71,
											"end": 91,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 71,
											"end": 91,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 71,
											"end": 91,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 71,
											"end": 91,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71,
											"end": 91,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 91,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 71,
											"end": 91,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71,
											"end": 91,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 71,
											"end": 91,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 71,
											"end": 91,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 71,
											"end": 91,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 242,
											"end": 518,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 242,
											"end": 518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 242,
											"end": 518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 242,
											"end": 518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 242,
											"end": 518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 242,
											"end": 518,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 242,
											"end": 518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 242,
											"end": 518,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 242,
											"end": 518,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 242,
											"end": 518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 242,
											"end": 518,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 242,
											"end": 518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 242,
											"end": 518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 242,
											"end": 518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 242,
											"end": 518,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 242,
											"end": 518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 242,
											"end": 518,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 242,
											"end": 518,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 242,
											"end": 518,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 242,
											"end": 518,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 242,
											"end": 518,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 242,
											"end": 518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 242,
											"end": 518,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 44,
											"end": 66,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 44,
											"end": 66,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44,
											"end": 66,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44,
											"end": 66,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44,
											"end": 66,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 44,
											"end": 66,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44,
											"end": 66,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 44,
											"end": 66,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 44,
											"end": 66,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44,
											"end": 66,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 44,
											"end": 66,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44,
											"end": 66,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44,
											"end": 66,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44,
											"end": 66,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 522,
											"end": 693,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 522,
											"end": 693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 557,
											"end": 568,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 571,
											"end": 589,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 571,
											"end": 601,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 590,
											"end": 600,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 571,
											"end": 601,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 571,
											"end": 601,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 571,
											"end": 601,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 571,
											"end": 601,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 571,
											"end": 601,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 571,
											"end": 601,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 571,
											"end": 601,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 571,
											"end": 601,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 571,
											"end": 601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 571,
											"end": 601,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 571,
											"end": 601,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 571,
											"end": 601,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 571,
											"end": 601,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 571,
											"end": 601,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 571,
											"end": 601,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 571,
											"end": 601,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 557,
											"end": 601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 557,
											"end": 601,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 642,
											"end": 643,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 609,
											"end": 627,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 609,
											"end": 639,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 638,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 609,
											"end": 639,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 609,
											"end": 639,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 609,
											"end": 639,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 609,
											"end": 639,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 609,
											"end": 639,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 609,
											"end": 639,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 609,
											"end": 639,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 609,
											"end": 639,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 609,
											"end": 639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 609,
											"end": 639,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 609,
											"end": 639,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 609,
											"end": 639,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 609,
											"end": 639,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 609,
											"end": 639,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 609,
											"end": 639,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 609,
											"end": 643,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 609,
											"end": 643,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 609,
											"end": 643,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 609,
											"end": 643,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 659,
											"end": 669,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 651,
											"end": 679,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 651,
											"end": 679,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 651,
											"end": 687,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 680,
											"end": 686,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 651,
											"end": 687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 651,
											"end": 687,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 651,
											"end": 687,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 651,
											"end": 687,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 651,
											"end": 687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 651,
											"end": 687,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 651,
											"end": 687,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 651,
											"end": 687,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 651,
											"end": 687,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 651,
											"end": 687,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 651,
											"end": 687,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 651,
											"end": 687,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 651,
											"end": 687,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 651,
											"end": 687,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 651,
											"end": 687,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 651,
											"end": 687,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 651,
											"end": 687,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 651,
											"end": 687,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 651,
											"end": 687,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 651,
											"end": 687,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 651,
											"end": 687,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 651,
											"end": 687,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 651,
											"end": 687,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 651,
											"end": 687,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 651,
											"end": 687,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 651,
											"end": 687,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 651,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 651,
											"end": 687,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 651,
											"end": 687,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 651,
											"end": 687,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 651,
											"end": 687,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 651,
											"end": 687,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 651,
											"end": 687,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 651,
											"end": 687,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 651,
											"end": 687,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 651,
											"end": 687,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 651,
											"end": 687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 651,
											"end": 687,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 549,
											"end": 693,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 522,
											"end": 693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 71,
											"end": 91,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 71,
											"end": 91,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71,
											"end": 91,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 71,
											"end": 91,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 71,
											"end": 91,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 71,
											"end": 91,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 242,
											"end": 518,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 242,
											"end": 518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 291,
											"end": 295,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 321,
											"end": 329,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 321,
											"end": 329,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 309,
											"end": 318,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 309,
											"end": 329,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 305,
											"end": 513,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 305,
											"end": 513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 305,
											"end": 513,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 373,
											"end": 382,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 342,
											"end": 360,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 342,
											"end": 369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 361,
											"end": 368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 361,
											"end": 368,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 361,
											"end": 368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 361,
											"end": 368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 361,
											"end": 368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 361,
											"end": 368,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 361,
											"end": 368,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 361,
											"end": 368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 361,
											"end": 368,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 361,
											"end": 368,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 361,
											"end": 368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 342,
											"end": 369,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 342,
											"end": 369,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 342,
											"end": 369,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 342,
											"end": 369,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 342,
											"end": 369,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 342,
											"end": 369,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 342,
											"end": 369,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 342,
											"end": 369,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 342,
											"end": 369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 342,
											"end": 369,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 342,
											"end": 369,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 342,
											"end": 369,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 342,
											"end": 369,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 342,
											"end": 369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 342,
											"end": 369,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 342,
											"end": 369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 342,
											"end": 382,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 342,
											"end": 382,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 342,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 342,
											"end": 382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 342,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 342,
											"end": 382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 342,
											"end": 382,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 342,
											"end": 382,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 342,
											"end": 382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 342,
											"end": 382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 342,
											"end": 382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 342,
											"end": 382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 342,
											"end": 382,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 342,
											"end": 382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 403,
											"end": 413,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 393,
											"end": 400,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 393,
											"end": 400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 393,
											"end": 413,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 393,
											"end": 413,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 393,
											"end": 413,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 393,
											"end": 413,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 393,
											"end": 413,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 393,
											"end": 413,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 393,
											"end": 413,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 393,
											"end": 413,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 393,
											"end": 413,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 393,
											"end": 413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 393,
											"end": 413,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 393,
											"end": 413,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 393,
											"end": 413,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 393,
											"end": 413,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 393,
											"end": 413,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 393,
											"end": 413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 393,
											"end": 413,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 393,
											"end": 413,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 435,
											"end": 444,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 424,
											"end": 432,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 424,
											"end": 444,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 424,
											"end": 444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 424,
											"end": 444,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 424,
											"end": 444,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 462,
											"end": 466,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 455,
											"end": 466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 455,
											"end": 466,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 455,
											"end": 466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 455,
											"end": 466,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 305,
											"end": 513,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 305,
											"end": 513,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 499,
											"end": 504,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 492,
											"end": 504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 492,
											"end": 504,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 242,
											"end": 518,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 242,
											"end": 518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 242,
											"end": 518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 242,
											"end": 518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 670,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 593,
											"end": 670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 630,
											"end": 637,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 648,
											"end": 664,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 648,
											"end": 664,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 670,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 593,
											"end": 670,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 593,
											"end": 670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 676,
											"end": 794,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 676,
											"end": 794,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 781,
											"end": 786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 763,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 763,
											"end": 787,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 758,
											"end": 761,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 751,
											"end": 788,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 676,
											"end": 794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 893,
											"end": 897,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 931,
											"end": 933,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 920,
											"end": 929,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 916,
											"end": 934,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 908,
											"end": 934,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 908,
											"end": 934,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1012,
											"end": 1013,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1010,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 997,
											"end": 1014,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 988,
											"end": 994,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 944,
											"end": 1015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 800,
											"end": 1022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1028,
											"end": 1118,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1028,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1062,
											"end": 1069,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1105,
											"end": 1110,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1098,
											"end": 1111,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1112,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1112,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1112,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1028,
											"end": 1118,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1028,
											"end": 1118,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1028,
											"end": 1118,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1028,
											"end": 1118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1124,
											"end": 1233,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1124,
											"end": 1233,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1220,
											"end": 1225,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1205,
											"end": 1226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1226,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1205,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1203,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1227,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1124,
											"end": 1233,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1124,
											"end": 1233,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1124,
											"end": 1233,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1449,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1239,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1326,
											"end": 1330,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1364,
											"end": 1366,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1353,
											"end": 1362,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1367,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1341,
											"end": 1367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1341,
											"end": 1367,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1439,
											"end": 1440,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1428,
											"end": 1437,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1424,
											"end": 1441,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1421,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1377,
											"end": 1442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1442,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1377,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1449,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1449,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1449,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1449,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1455,
											"end": 1635,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1455,
											"end": 1635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1503,
											"end": 1580,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1500,
											"end": 1501,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1493,
											"end": 1581,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1604,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1597,
											"end": 1598,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1590,
											"end": 1605,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1628,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1621,
											"end": 1622,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1614,
											"end": 1629,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1641,
											"end": 1832,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1641,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1700,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1718,
											"end": 1719,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1700,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1700,
											"end": 1720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1700,
											"end": 1720,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1700,
											"end": 1720,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1695,
											"end": 1720,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1695,
											"end": 1720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1734,
											"end": 1754,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1752,
											"end": 1753,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1734,
											"end": 1754,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1734,
											"end": 1754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1734,
											"end": 1754,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1734,
											"end": 1754,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1754,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1754,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1777,
											"end": 1778,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1774,
											"end": 1775,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1763,
											"end": 1779,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1763,
											"end": 1779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 1801,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1795,
											"end": 1796,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1802,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1789,
											"end": 1825,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1789,
											"end": 1825,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1789,
											"end": 1825,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1805,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1805,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1805,
											"end": 1823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1805,
											"end": 1823,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1805,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1789,
											"end": 1825,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1789,
											"end": 1825,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1641,
											"end": 1832,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1641,
											"end": 1832,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1641,
											"end": 1832,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1641,
											"end": 1832,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1641,
											"end": 1832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"bstr.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"becomeRichest()": "69934ee7",
							"mostSent()": "6886bf1c",
							"richest()": "02e26c38",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"becomeRichest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mostSent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"richest\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"bstr.sol\":\"Test\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"bstr.sol\":{\"keccak256\":\"0x3efa5867925d6b4b47261e79a648ef323054a83bdf304899595d731932031c10\",\"urls\":[\"bzz-raw://e47ac01e5cfbf27ad8706e63c34c9e13ab6518b6655c747578fb864d283c4a81\",\"dweb:/ipfs/QmTtwmGsyzPaDQaY9zBxvvtMb4MwXuKoHffNXWgR7182U8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "bstr.sol:Test",
								"label": "richest",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 5,
								"contract": "bstr.sol:Test",
								"label": "mostSent",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 9,
								"contract": "bstr.sol:Test",
								"label": "pendingWithdrawals",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> bstr.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "bstr.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n --> bstr.sol:9:4:\n  |\n9 |    constructor() public payable {\n  |    ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 238,
					"file": "bstr.sol",
					"start": 147
				},
				"type": "Warning"
			}
		],
		"sources": {
			"bstr.sol": {
				"ast": {
					"absolutePath": "bstr.sol",
					"exportedSymbols": {
						"Test": [
							85
						]
					},
					"id": 86,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Test",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 85,
							"linearizedBaseContracts": [
								85
							],
							"name": "Test",
							"nameLocation": "34:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "02e26c38",
									"id": 3,
									"mutability": "mutable",
									"name": "richest",
									"nameLocation": "59:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 85,
									"src": "44:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "44:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6886bf1c",
									"id": 5,
									"mutability": "mutable",
									"name": "mostSent",
									"nameLocation": "83:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 85,
									"src": "71:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "71:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 9,
									"mutability": "mutable",
									"name": "pendingWithdrawals",
									"nameLocation": "123:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 85,
									"src": "97:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 8,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 6,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "106:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "97:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 7,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "117:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "176:62:0",
										"statements": [
											{
												"expression": {
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 12,
														"name": "richest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "184:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 13,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "194:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 14,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "198:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "194:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "184:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "184:20:0"
											},
											{
												"expression": {
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 17,
														"name": "mostSent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "212:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 18,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "223:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 19,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "227:5:0",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "223:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "212:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "212:20:0"
											}
										]
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "158:2:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "176:0:0"
									},
									"scope": 85,
									"src": "147:91:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 56,
										"nodeType": "Block",
										"src": "297:221:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 31,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 28,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "309:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 29,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "313:5:0",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "309:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 30,
														"name": "mostSent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "321:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "309:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 54,
													"nodeType": "Block",
													"src": "481:32:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "499:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 27,
															"id": 53,
															"nodeType": "Return",
															"src": "492:12:0"
														}
													]
												},
												"id": 55,
												"nodeType": "IfStatement",
												"src": "305:208:0",
												"trueBody": {
													"id": 51,
													"nodeType": "Block",
													"src": "331:144:0",
													"statements": [
														{
															"expression": {
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 32,
																		"name": "pendingWithdrawals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 9,
																		"src": "342:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 34,
																	"indexExpression": {
																		"id": 33,
																		"name": "richest",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3,
																		"src": "361:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "342:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"expression": {
																		"id": 35,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "373:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 36,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "377:5:0",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "373:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "342:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 38,
															"nodeType": "ExpressionStatement",
															"src": "342:40:0"
														},
														{
															"expression": {
																"id": 42,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 39,
																	"name": "richest",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "393:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 40,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "403:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 41,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "407:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "403:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "393:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 43,
															"nodeType": "ExpressionStatement",
															"src": "393:20:0"
														},
														{
															"expression": {
																"id": 47,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 44,
																	"name": "mostSent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "424:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 45,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "435:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 46,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "439:5:0",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "435:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "424:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 48,
															"nodeType": "ExpressionStatement",
															"src": "424:20:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 49,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "462:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 27,
															"id": 50,
															"nodeType": "Return",
															"src": "455:11:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "69934ee7",
									"id": 57,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "becomeRichest",
									"nameLocation": "251:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "264:2:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "291:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 25,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "291:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "290:6:0"
									},
									"scope": 85,
									"src": "242:276:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "549:144:0",
										"statements": [
											{
												"assignments": [
													61
												],
												"declarations": [
													{
														"constant": false,
														"id": 61,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "562:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 83,
														"src": "557:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 60,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "557:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 66,
												"initialValue": {
													"baseExpression": {
														"id": 62,
														"name": "pendingWithdrawals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "571:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 65,
													"indexExpression": {
														"expression": {
															"id": 63,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "590:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 64,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "594:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "590:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "571:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "557:44:0"
											},
											{
												"expression": {
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 67,
															"name": "pendingWithdrawals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "609:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 70,
														"indexExpression": {
															"expression": {
																"id": 68,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "628:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 69,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "632:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "628:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "609:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 71,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "642:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "609:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 73,
												"nodeType": "ExpressionStatement",
												"src": "609:34:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 80,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 61,
															"src": "680:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 76,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "659:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 77,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "663:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "659:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "651:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 74,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "651:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "651:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 79,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "671:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "651:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "651:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 82,
												"nodeType": "ExpressionStatement",
												"src": "651:36:0"
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "531:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "539:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "549:0:0"
									},
									"scope": 85,
									"src": "522:171:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 86,
							"src": "25:670:0",
							"usedErrors": []
						}
					],
					"src": "0:695:0"
				},
				"id": 0
			}
		}
	}
}