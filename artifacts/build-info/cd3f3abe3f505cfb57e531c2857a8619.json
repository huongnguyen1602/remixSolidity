{
	"id": "cd3f3abe3f505cfb57e531c2857a8619",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contract-f2df044801.sol": {
				"content": "pragma solidity ^0.8.17;\n\ncontract Factory {\n    event Log(address addr);\n\n    // Deploys a contract that always returns 42\n    function deploy() external {\n        bytes memory bytecode = hex\"69602a60005260206000f3600052600a6016f3\";\n        address addr;\n        assembly {\n            // create(value, offset, size)\n            addr := create(0, add(bytecode, 0x20), 0x13)\n        }\n        require(addr != address(0));\n\n        emit Log(addr);\n    }\n}\n\ninterface IContract {\n    function getMeaningOfLife() external view returns (uint);\n}\n\n// https://www.evm.codes/playground\n/*\nRun time code - return 42\n602a60005260206000f3\n\n// Store 42 to memory\nmstore(p, v) - store v at memory p to p + 32\n\nPUSH1 0x2a\nPUSH1 0\nMSTORE\n\n// Return 32 bytes from memory\nreturn(p, s) - end execution and return data from memory p to p + s\n\nPUSH1 0x20\nPUSH1 0\nRETURN\n\nCreation code - return runtime code\n69602a60005260206000f3600052600a6016f3\n\n// Store run time code to memory\nPUSH10 0X602a60005260206000f3\nPUSH1 0\nMSTORE\n\n// Return 10 bytes from memory starting at offset 22\nPUSH1 0x0a\nPUSH1 0x16\nRETURN\n*/\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contract-f2df044801.sol": {
				"Factory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "addr",
									"type": "address"
								}
							],
							"name": "Log",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "deploy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contract-f2df044801.sol\":26:454  contract Factory {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contract-f2df044801.sol\":26:454  contract Factory {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x775c300c\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contract-f2df044801.sol\":128:452  function deploy() external {... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      stop\n    tag_5:\n        /* \"contract-f2df044801.sol\":165:186  bytes memory bytecode */\n      0x00\n        /* \"contract-f2df044801.sol\":165:232  bytes memory bytecode = hex\"69602a60005260206000f3600052600a6016f3\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x13\n      dup2\n      mstore\n      0x20\n      add\n      0x69602a60005260206000f3600052600a6016f300000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"contract-f2df044801.sol\":242:254  address addr */\n      0x00\n        /* \"contract-f2df044801.sol\":369:373  0x13 */\n      0x13\n        /* \"contract-f2df044801.sol\":362:366  0x20 */\n      0x20\n        /* \"contract-f2df044801.sol\":352:360  bytecode */\n      dup4\n        /* \"contract-f2df044801.sol\":348:367  add(bytecode, 0x20) */\n      add\n        /* \"contract-f2df044801.sol\":345:346  0 */\n      0x00\n        /* \"contract-f2df044801.sol\":338:374  create(0, add(bytecode, 0x20), 0x13) */\n      create\n        /* \"contract-f2df044801.sol\":330:374  addr := create(0, add(bytecode, 0x20), 0x13) */\n      swap1\n      pop\n        /* \"contract-f2df044801.sol\":417:418  0 */\n      0x00\n        /* \"contract-f2df044801.sol\":401:419  addr != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract-f2df044801.sol\":401:405  addr */\n      dup2\n        /* \"contract-f2df044801.sol\":401:419  addr != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contract-f2df044801.sol\":393:420  require(addr != address(0)) */\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_7:\n        /* \"contract-f2df044801.sol\":436:445  Log(addr) */\n      0xb8a00d6d8ca1be30bfec34d8f97e55f0f0fd9eeb7fb46e030516363d4cfe1ad6\n        /* \"contract-f2df044801.sol\":440:444  addr */\n      dup2\n        /* \"contract-f2df044801.sol\":436:445  Log(addr) */\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contract-f2df044801.sol\":155:452  {... */\n      pop\n      pop\n        /* \"contract-f2df044801.sol\":128:452  function deploy() external {... */\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_10:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_11:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_16\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_10\n      jump\t// in\n    tag_16:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_12:\n        /* \"#utility.yul\":328:352   */\n      tag_18\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_11\n      jump\t// in\n    tag_18:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_9:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_20\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_12\n      jump\t// in\n    tag_20:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220741945b3c50bbacaa5e2a1de58e6fd71aa383d19dcdea7adba07c9c4f2190da464736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610187806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063775c300c14610030575b600080fd5b61003861003a565b005b60006040518060400160405280601381526020017f69602a60005260206000f3600052600a6016f300000000000000000000000000815250905060006013602083016000f09050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100ba57600080fd5b7fb8a00d6d8ca1be30bfec34d8f97e55f0f0fd9eeb7fb46e030516363d4cfe1ad6816040516100e99190610136565b60405180910390a15050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610120826100f5565b9050919050565b61013081610115565b82525050565b600060208201905061014b6000830184610127565b9291505056fea2646970667358221220741945b3c50bbacaa5e2a1de58e6fd71aa383d19dcdea7adba07c9c4f2190da464736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x187 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x775C300C EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x3A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x69602A60005260206000F3600052600A6016F300000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 PUSH1 0x13 PUSH1 0x20 DUP4 ADD PUSH1 0x0 CREATE SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0xB8A00D6D8CA1BE30BFEC34D8F97E55F0F0FD9EEB7FB46E030516363D4CFE1AD6 DUP2 PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x136 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 PUSH2 0xF5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x130 DUP2 PUSH2 0x115 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x127 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x1945B3C50BBACAA5E2A1DE58E6FD71AA383D19DCDE 0xA7 0xAD 0xBA SMOD 0xC9 0xC4 CALLCODE NOT 0xD LOG4 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "26:428:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@deploy_30": {
									"entryPoint": 58,
									"id": 30,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 295,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 310,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 277,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 245,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:590:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "184:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "194:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "205:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "166:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "176:7:1",
														"type": ""
													}
												],
												"src": "139:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "306:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "316:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "316:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "294:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "301:3:1",
														"type": ""
													}
												],
												"src": "241:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "463:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "473:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "496:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "481:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "577:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "509:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "509:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "435:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "447:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "458:4:1",
														"type": ""
													}
												],
												"src": "365:222:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063775c300c14610030575b600080fd5b61003861003a565b005b60006040518060400160405280601381526020017f69602a60005260206000f3600052600a6016f300000000000000000000000000815250905060006013602083016000f09050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100ba57600080fd5b7fb8a00d6d8ca1be30bfec34d8f97e55f0f0fd9eeb7fb46e030516363d4cfe1ad6816040516100e99190610136565b60405180910390a15050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610120826100f5565b9050919050565b61013081610115565b82525050565b600060208201905061014b6000830184610127565b9291505056fea2646970667358221220741945b3c50bbacaa5e2a1de58e6fd71aa383d19dcdea7adba07c9c4f2190da464736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x775C300C EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x3A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x69602A60005260206000F3600052600A6016F300000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 PUSH1 0x13 PUSH1 0x20 DUP4 ADD PUSH1 0x0 CREATE SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0xB8A00D6D8CA1BE30BFEC34D8F97E55F0F0FD9EEB7FB46E030516363D4CFE1AD6 DUP2 PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x136 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 PUSH2 0xF5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x130 DUP2 PUSH2 0x115 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x127 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x1945B3C50BBACAA5E2A1DE58E6FD71AA383D19DCDE 0xA7 0xAD 0xBA SMOD 0xC9 0xC4 CALLCODE NOT 0xD LOG4 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "26:428:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;128:324;;;:::i;:::-;;;165:21;:67;;;;;;;;;;;;;;;;;;;242:12;369:4;362;352:8;348:19;345:1;338:36;330:44;;417:1;401:18;;:4;:18;;;393:27;;;;;;436:9;440:4;436:9;;;;;;:::i;:::-;;;;;;;;155:297;;128:324::o;7:126:1:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "78200",
								"executionCost": "129",
								"totalCost": "78329"
							},
							"external": {
								"deploy()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 26,
									"end": 454,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 26,
									"end": 454,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 26,
									"end": 454,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26,
									"end": 454,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 26,
									"end": 454,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 454,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26,
									"end": 454,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26,
									"end": 454,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26,
									"end": 454,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 454,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 454,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 26,
									"end": 454,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26,
									"end": 454,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26,
									"end": 454,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26,
									"end": 454,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 454,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 454,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 454,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 454,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 26,
									"end": 454,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 454,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220741945b3c50bbacaa5e2a1de58e6fd71aa383d19dcdea7adba07c9c4f2190da464736f6c63430008120033",
									".code": [
										{
											"begin": 26,
											"end": 454,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 26,
											"end": 454,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26,
											"end": 454,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26,
											"end": 454,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 26,
											"end": 454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 454,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26,
											"end": 454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26,
											"end": 454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26,
											"end": 454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 454,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26,
											"end": 454,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26,
											"end": 454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26,
											"end": 454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26,
											"end": 454,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26,
											"end": 454,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26,
											"end": 454,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 26,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26,
											"end": 454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26,
											"end": 454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26,
											"end": 454,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 26,
											"end": 454,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 26,
											"end": 454,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 26,
											"end": 454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 454,
											"name": "PUSH",
											"source": 0,
											"value": "775C300C"
										},
										{
											"begin": 26,
											"end": 454,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 26,
											"end": 454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26,
											"end": 454,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26,
											"end": 454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26,
											"end": 454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26,
											"end": 454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 454,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 128,
											"end": 452,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 128,
											"end": 452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 128,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 128,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 128,
											"end": 452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 128,
											"end": 452,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 128,
											"end": 452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 128,
											"end": 452,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 128,
											"end": 452,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 128,
											"end": 452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 165,
											"end": 186,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 165,
											"end": 232,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 165,
											"end": 232,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 165,
											"end": 232,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 165,
											"end": 232,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 165,
											"end": 232,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 165,
											"end": 232,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 165,
											"end": 232,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 165,
											"end": 232,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 165,
											"end": 232,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 165,
											"end": 232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 165,
											"end": 232,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 165,
											"end": 232,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 165,
											"end": 232,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 165,
											"end": 232,
											"name": "PUSH",
											"source": 0,
											"value": "69602A60005260206000F3600052600A6016F300000000000000000000000000"
										},
										{
											"begin": 165,
											"end": 232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 165,
											"end": 232,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 165,
											"end": 232,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 165,
											"end": 232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 165,
											"end": 232,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 242,
											"end": 254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 369,
											"end": 373,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 362,
											"end": 366,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 352,
											"end": 360,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 348,
											"end": 367,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 345,
											"end": 346,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 338,
											"end": 374,
											"name": "CREATE",
											"source": 0
										},
										{
											"begin": 330,
											"end": 374,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 330,
											"end": 374,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 401,
											"end": 419,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 401,
											"end": 419,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 401,
											"end": 405,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 401,
											"end": 419,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 401,
											"end": 419,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 401,
											"end": 419,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 393,
											"end": 420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 393,
											"end": 420,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 393,
											"end": 420,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 393,
											"end": 420,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 393,
											"end": 420,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 393,
											"end": 420,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 393,
											"end": 420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 436,
											"end": 445,
											"name": "PUSH",
											"source": 0,
											"value": "B8A00D6D8CA1BE30BFEC34D8F97E55F0F0FD9EEB7FB46E030516363D4CFE1AD6"
										},
										{
											"begin": 440,
											"end": 444,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 436,
											"end": 445,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 436,
											"end": 445,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 436,
											"end": 445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 436,
											"end": 445,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 436,
											"end": 445,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 436,
											"end": 445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 436,
											"end": 445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 436,
											"end": 445,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 436,
											"end": 445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 436,
											"end": 445,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 436,
											"end": 445,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 436,
											"end": 445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 436,
											"end": 445,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 436,
											"end": 445,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 436,
											"end": 445,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 436,
											"end": 445,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 155,
											"end": 452,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 155,
											"end": 452,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 128,
											"end": 452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contract-f2df044801.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"deploy()": "775c300c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"Log\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"deploy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract-f2df044801.sol\":\"Factory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract-f2df044801.sol\":{\"keccak256\":\"0x923e3fcd085f2460ec98cdb04f959bdace5590b29fdc489a334744c56652ed66\",\"urls\":[\"bzz-raw://ffa1a004ffe342fef71c011bd35e1f8ac7f7cd0128677fc601ed7b8bb1d5dcab\",\"dweb:/ipfs/QmfY9GGRbjuQPMwjioSX5fAZu7YUMaMYjMxLTNvCCdo5JH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IContract": {
					"abi": [
						{
							"inputs": [],
							"name": "getMeaningOfLife",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getMeaningOfLife()": "858af522"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getMeaningOfLife\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract-f2df044801.sol\":\"IContract\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract-f2df044801.sol\":{\"keccak256\":\"0x923e3fcd085f2460ec98cdb04f959bdace5590b29fdc489a334744c56652ed66\",\"urls\":[\"bzz-raw://ffa1a004ffe342fef71c011bd35e1f8ac7f7cd0128677fc601ed7b8bb1d5dcab\",\"dweb:/ipfs/QmfY9GGRbjuQPMwjioSX5fAZu7YUMaMYjMxLTNvCCdo5JH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contract-f2df044801.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contract-f2df044801.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contract-f2df044801.sol": {
				"ast": {
					"absolutePath": "contract-f2df044801.sol",
					"exportedSymbols": {
						"Factory": [
							31
						],
						"IContract": [
							37
						]
					},
					"id": 38,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Factory",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 31,
							"linearizedBaseContracts": [
								31
							],
							"name": "Factory",
							"nameLocation": "35:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "b8a00d6d8ca1be30bfec34d8f97e55f0f0fd9eeb7fb46e030516363d4cfe1ad6",
									"id": 5,
									"name": "Log",
									"nameLocation": "55:3:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"indexed": false,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "67:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 5,
												"src": "59:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "59:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58:14:0"
									},
									"src": "49:24:0"
								},
								{
									"body": {
										"id": 29,
										"nodeType": "Block",
										"src": "155:297:0",
										"statements": [
											{
												"assignments": [
													9
												],
												"declarations": [
													{
														"constant": false,
														"id": 9,
														"mutability": "mutable",
														"name": "bytecode",
														"nameLocation": "178:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 29,
														"src": "165:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 8,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "165:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 11,
												"initialValue": {
													"hexValue": "69602a60005260206000f3600052600a6016f3",
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "hexString",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "189:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_9825fb11f5407c429c10bf73c5c170abe8ae7808e5c48ec47a80b9da288334cb",
														"typeString": "literal_string hex\"69602a60005260206000f3600052600a6016f3\""
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "165:67:0"
											},
											{
												"assignments": [
													13
												],
												"declarations": [
													{
														"constant": false,
														"id": 13,
														"mutability": "mutable",
														"name": "addr",
														"nameLocation": "250:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 29,
														"src": "242:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 12,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "242:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 14,
												"nodeType": "VariableDeclarationStatement",
												"src": "242:12:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "273:111:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "330:44:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "bytecode",
																				"nodeType": "YulIdentifier",
																				"src": "352:8:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "362:4:0",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "348:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "348:19:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "369:4:0",
																		"type": "",
																		"value": "0x13"
																	}
																],
																"functionName": {
																	"name": "create",
																	"nodeType": "YulIdentifier",
																	"src": "338:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "338:36:0"
															},
															"variableNames": [
																{
																	"name": "addr",
																	"nodeType": "YulIdentifier",
																	"src": "330:4:0"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 13,
														"isOffset": false,
														"isSlot": false,
														"src": "330:4:0",
														"valueSize": 1
													},
													{
														"declaration": 9,
														"isOffset": false,
														"isSlot": false,
														"src": "352:8:0",
														"valueSize": 1
													}
												],
												"id": 15,
												"nodeType": "InlineAssembly",
												"src": "264:120:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 17,
																"name": "addr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "401:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 20,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "417:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 19,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "409:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 18,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "409:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 21,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "409:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "401:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 16,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "393:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "393:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "393:27:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 26,
															"name": "addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "440:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 25,
														"name": "Log",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "436:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "436:9:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "EmitStatement",
												"src": "431:14:0"
											}
										]
									},
									"functionSelector": "775c300c",
									"id": 30,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deploy",
									"nameLocation": "137:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "143:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "155:0:0"
									},
									"scope": 31,
									"src": "128:324:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 38,
							"src": "26:428:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IContract",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 37,
							"linearizedBaseContracts": [
								37
							],
							"name": "IContract",
							"nameLocation": "466:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "858af522",
									"id": 36,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getMeaningOfLife",
									"nameLocation": "491:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "507:2:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "533:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "533:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "532:6:0"
									},
									"scope": 37,
									"src": "482:57:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 38,
							"src": "456:85:0",
							"usedErrors": []
						}
					],
					"src": "0:1092:0"
				},
				"id": 0
			}
		}
	}
}